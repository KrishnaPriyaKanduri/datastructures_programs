#include<stdio.h>
#include<stdlib.h>
struct node{
    int data;
    struct node*next;
};
void linkedlisttraversal(struct node*ptr){
    while(ptr!=NULL){
        printf("%d\n",ptr->data);
        ptr=ptr->next;
    }
}
struct node*insertatfirst(struct node *head,int data){
    struct node*ptr=(struct node *)malloc(sizeof(struct node));
    ptr->data=data;
    ptr->next=head;
    head=ptr;
    return(ptr);
}
struct node*insertatpos(struct node *head,int pos, int data){
    struct node*ptr=(struct node *)malloc(sizeof(struct node));
    struct node*temp=head;
    int i=0;
    while(i!=pos-1){
        temp=temp->next;
        i++;
    }
    ptr->data=data;
    ptr->next=temp->next;
    temp->next=ptr;
    return head;
}
struct node*insertatlast(struct node *head,int data){
    struct node *ptr=(struct node *)malloc(sizeof(struct node));
    struct node *temp=head;
    int i=0;
    while(temp->next!=NULL){
        temp=temp->next;
    }
    ptr->data=data;
    temp->next=ptr;
    ptr->next=NULL;
    return head;
}
struct node*deleteatfirst(struct node *head){
    struct node*ptr=head;
    head=head->next;
    free(ptr);
    return head;
}
struct node*deleteatpos(struct node*head,int pos){
    struct node*p=head;
    struct node*q=head->next;
    int i=0;
    for(i=0;i<pos-1;i++){
        p=p->next;
        q=q->next;
    }
    p->next=q->next;
    free(q);
    return head;
}
struct node*deleteatlast(struct node*head){
    struct node*p=head;
    struct node*q=head->next;
    while(q->next!=NULL){
        p=p->next;
        q=q->next;
    }
    p->next=NULL;
    free(q);
    return head;
}
int main(){
    struct node*head;
    struct node*second;
    struct node*third;
    head=(struct node*)malloc(sizeof(struct node));
    second=(struct node*)malloc(sizeof(struct node));
    third=(struct node*)malloc(sizeof(struct node));
    head->data=7;
    head->next=second;
    second->data=10;
    second->next=third;
    third->data=14;
    third->next=NULL;
    printf("linked list before insertion\n");
    linkedlisttraversal(head);
    printf("linked list after insertion at head\n");
    head=insertatfirst(head,5);
    linkedlisttraversal(head);
    printf("linked list after insertion at pos\n");
    head=insertatpos(head,2,15);
    linkedlisttraversal(head);
    printf("linked list after insertion at last\n");
    head=insertatlast(head,35);
    linkedlisttraversal(head);
    printf("linked list after deletion at  head\n");
    head=deleteatfirst(head);
    linkedlisttraversal(head);
    printf("linked list after deleton at pos\n");
    head=deleteatpos(head,2);
    linkedlisttraversal(head);
    printf("linked list after deletion at last\n");
    head=deleteatlast(head);
    linkedlisttraversal(head);
    return 0;
}
